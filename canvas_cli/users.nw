\section{Listing users of a course}

This module simply lists the users of a course on Canvas in a format that is 
aligned with the UNIX-philosophy, i.e.~can easily be used in scripts.

This module provides two things.
First, it provides a function that will list the users enrolled to a given 
course ([[list_users]], Sect.~\ref{list-users-function}).
Second, it provides a command-line interface to that function 
([[command_line_interface]], Sect.~\ref{command-line-interface}).
<<users.py>>=
#!/bin/env python3
"""Lists our users."""

import sys
<<imports>>

<<functions>>

if __name__ == "__main__":
  try:
    command_line_interface()
    sys.exit(0)
  except Exception as e:
    err(-1, e)
@

We want uniform error handling.
We will use the following function [[err]], which is inspired by err(3) in the 
BSD world.
<<functions>>=
def err(rc, msg):
  print(f"{sys.argv[0]}: error: {msg}", file=sys.stderr)
  sys.exit(rc)
@


\section{Producing a list of users, [[list_users]]}%
\label{list-users-function}

We provide the function~[[list_users]] which returns a list of users.
<<functions>>=
def list_users(course, user_types):
  return course.get_users(enrollment_type=user_types)
@


\section{A command-line interface, [[command_line_interface]]}%
\label{command-line-interface}

If we run this program, we must first set up a [[canvas]] object, then process 
the command-line arguments and finally run the list-users function.
<<functions>>=
def command_line_interface():
  <<set up canvas object>>
  <<get the list of users>>
  <<print the list of users>>
@

\subsection{Accessing Canvas}

We will use the [[canvasapi]] module.
This module must be installed by running [[pip install canvasapi]].
We keep the settings in the environment, this also requires the [[os]] module.
<<imports>>=
from canvasapi import Canvas
import os
@ Now we can set up the [[canvas]] object, through which we access everything 
in Canvas.
<<set up canvas object>>=
API_URL = os.environ["CANVAS_SERVER"]
API_KEY = os.environ["CANVAS_TOKEN"]

canvas = Canvas(API_URL, API_KEY)
@

\subsection{Get and print the list of users}

We then simply call the list-users function with the [[canvas]] object as the 
parameter.
<<get the list of users>>=
users = list_users(canvas)
@

Now we can format the list of users and print them.
<<print the list of users>>=
for course in users:
  print(f"{course.id}\t{course.course_code} {course.name}")
@

